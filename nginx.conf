server {
    listen 443 ssl;
    server_name ifmeet.sytes.net;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    root /usr/share/nginx/html/IFMeet;
    index index.html;
    
    # Configurações CORS globais (aplicam-se a todas as respostas)
    add_header 'Access-Control-Allow-Origin' '$http_origin' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Content-Disposition, x-usuario-pessoa-id' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Disposition, x-usuario-pessoa-id' always;

    location / {
        try_files $uri /index.html;
        
        # Configuração específica para OPTIONS no frontend
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /api/ {
        proxy_pass http://ifmeet.sytes.net:9000;  # Alterado para usar nome do serviço (se Docker)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Headers específicos para API
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        
        # Não é necessário repetir as configurações CORS aqui, pois são globais
        # Apenas o tratamento de OPTIONS é específico
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}